Todos:
  ☐ Left off on
    ☐ Forms
      ☐ Left off on Checkbox Menu (should it use menu-stack)
  ☐ Make breadcrumbs agnostic
  ☐ Need to add badge stack to ulu frontend
  ☐ Need to add skeleton to frontend
  ☐ Need to add spoke spinner to frontend
  ☐ Left off migrating other components (not namespaced yet)
  ☐ Left off setting up toast plugin test @important
    ☐ Need to setup frontend styling for this
  ☐ Make sure FaIcon's are refactored
  ☐ Normalize modifiers across all components
    * No type or things like that user should expect to use modifiers
  ☐ Check all components against AR
  ☐ Remove modal native resizer and add x/y resizer for center
    ☐ Remove all state related to this
  ☐ Create script for setting all fa icons
  ☐ Need to add frontend components for:
    ☐ skeleton
    ☐ headline-label
  ☐ Still pending major components
    ☐ Popover
    ☐ Tooltip
    ☐ Modal
  ☐ Setup the following stories
    * Note: Macbook pro won't run model, will need to run these on mac studio
    Untested and Undocumented:
      ☐ `node generate-story.js ./lib/components/UluList.vue ./stories/components/UluList.stories.js`
      ☐ `node generate-story.js ./lib/components/UluTag.vue ./stories/components/UluTag.stories.js`
      ☐ `node generate-story.js ./lib/components/UluCard.vue ./stories/components/UluCard.stories.js`
      ☐ `node generate-story.js ./lib/components/UluSkipLink.vue ./stories/components/UluSkipLink.stories.js`
      ☐ `node generate-story.js ./lib/components/UluNavStrip.vue ./stories/components/UluNavStrip.stories.js`
      ☐ `node generate-story.js ./lib/components/UluMain.vue ./stories/components/UluMain.stories.js`
      ☐ `node generate-story.js ./lib/components/UluTabsGroup.vue ./stories/components/UluTabsGroup.stories.js`
      ☐ `node generate-story.js ./lib/components/UluTabsList.vue ./stories/components/UluTabsList.stories.js`
      ☐ `node generate-story.js ./lib/components/UluTabsPanel.vue ./stories/components/UluTabsPanel.stories.js`
      ☐ `node generate-story.js ./lib/components/UluTabsPanels.vue ./stories/components/UluTabsPanels.stories.js`
      ☐ `node generate-story.js ./lib/components/UluTabsTab.vue ./stories/components/UluTabsTab.stories.js`
  ☐ Refactor to composition api versus options @next-version
  ✔ Test using codellama to generate stories? @done
  ☐ Documentation
    ☐ Need to have actual templates for each so show code makes sense
  ☐ Add FontAwesome
  ☐ Setup vite build config and organize npm scripts like frontend library (deploy/etc)
  ☐ Rename all components to Ulu Like UluButton
  ☐ Figure out how to bundle this for distribution
  ☐ Setup simple docs for each component
  ☐ Update Modals to dialog
  ☐ Bring in other components (Toast, FilterList, etc)
  ✔ Setup Docs @done
    ✔ Figure out which docs to use @done
      ✘ Histoire @on-hold @cancelled
        * Tested
        * Works well, but does not have support for docgen
          * It is on the roadmap --> https://github.com/histoire-dev/histoire/issues/126
      ✔ Storybook @done
        * Chose to use this since there is so much support and integrating it was pretty easy/painless
        * Lots of support
        * Seems to have support for auto docgen from comments
        * Not vue centric and saw a lot of people commenting on that, it does seem like they overcame this and that the tool is pretty mature for Vue now. 
        * Think this has the same issue as Histoire in that it may be overkill or useless (for more specific prop types, ie. sandboxing)
      ✔ vue-styleguideist @done
        * Docgen centric
        * Looks like people are moving away from this project
        * The docgen api is used by a lot of other projects but the app/output unsure
        * Could use this for now and migrate to histoire in the future?
        * Not sure how useful histoire will be for basic compontents

Not Vital:
  ☐ Modal
    ☐ Should 
    ☐ In the future, refactor resizer (in ulu/frontend) to be selfManaged too
      * Move the logic for the resizing to dedicated methods and add option for selfManaged 
        to disable event binding, then in vue bind events and bind the style change (width)
        * Then it can work in both frontend and vue but bind events