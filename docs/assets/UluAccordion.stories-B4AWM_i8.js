import{u as X,i as j,e as y,f as U,g as K,h as Z,j as ee,F as te,p as I,k as B,l as W,m as O,c as H,w,n as $,q as ne,o as V,s as le,v as L,x as E,y as k,r as ae,b as oe,t as se}from"./iframe-CTD5_1X8.js";var M;let re=Symbol("headlessui.useid"),ue=0;const R=(M=X)!=null?M:function(){return j(re,()=>`${++ue}`)()};function m(e){var n;if(e==null||e.value==null)return null;let l=(n=e.value.$el)!=null?n:e.value;return l instanceof Node?l:null}function C(e,n,...l){if(e in n){let t=n[e];return typeof t=="function"?t(...l):t}let a=new Error(`Tried to handle "${e}" but there is no handler defined. Only defined handlers are: ${Object.keys(n).map(t=>`"${t}"`).join(", ")}.`);throw Error.captureStackTrace&&Error.captureStackTrace(a,C),a}function F(e,n){if(e)return e;let l=n??"button";if(typeof l=="string"&&l.toLowerCase()==="button")return"button"}function ie(e,n){let l=y(F(e.value.type,e.value.as));return U(()=>{l.value=F(e.value.type,e.value.as)}),K(()=>{var a;l.value||m(n)&&m(n)instanceof HTMLButtonElement&&!((a=m(n))!=null&&a.hasAttribute("type"))&&(l.value="button")}),l}var x=(e=>(e[e.None=0]="None",e[e.RenderStrategy=1]="RenderStrategy",e[e.Static=2]="Static",e))(x||{}),ce=(e=>(e[e.Unmount=0]="Unmount",e[e.Hidden=1]="Hidden",e))(ce||{});function _({visible:e=!0,features:n=0,ourProps:l,theirProps:a,...t}){var c;let o=z(a,l),s=Object.assign(t,{props:o});if(e||n&2&&o.static)return P(s);if(n&1){let i=(c=o.unmount)==null||c?0:1;return C(i,{0(){return null},1(){return P({...t,props:{...o,hidden:!0,style:{display:"none"}}})}})}return P(s)}function P({props:e,attrs:n,slots:l,slot:a,name:t}){var c,o;let{as:s,...i}=pe(e,["unmount","static"]),u=(c=l.default)==null?void 0:c.call(l,a),v={};if(a){let d=!1,r=[];for(let[g,f]of Object.entries(a))typeof f=="boolean"&&(d=!0),f===!0&&r.push(g);d&&(v["data-headlessui-state"]=r.join(" "))}if(s==="template"){if(u=q(u??[]),Object.keys(i).length>0||Object.keys(n).length>0){let[d,...r]=u??[];if(!de(d)||r.length>0)throw new Error(['Passing props on "template"!',"",`The current component <${t} /> is rendering a "template".`,"However we need to passthrough the following props:",Object.keys(i).concat(Object.keys(n)).map(p=>p.trim()).filter((p,h,J)=>J.indexOf(p)===h).sort((p,h)=>p.localeCompare(h)).map(p=>`  - ${p}`).join(`
`),"","You can apply a few solutions:",['Add an `as="..."` prop, to ensure that we render an actual element instead of a "template".',"Render a single element as the child so that we can forward the props onto that element."].map(p=>`  - ${p}`).join(`
`)].join(`
`));let g=z((o=d.props)!=null?o:{},i,v),f=Z(d,g,!0);for(let p in g)p.startsWith("on")&&(f.props||(f.props={}),f.props[p]=g[p]);return f}return Array.isArray(u)&&u.length===1?u[0]:u}return ee(s,Object.assign({},i,v),{default:()=>u})}function q(e){return e.flatMap(n=>n.type===te?q(n.children):[n])}function z(...e){if(e.length===0)return{};if(e.length===1)return e[0];let n={},l={};for(let a of e)for(let t in a)t.startsWith("on")&&typeof a[t]=="function"?(l[t]!=null||(l[t]=[]),l[t].push(a[t])):n[t]=a[t];if(n.disabled||n["aria-disabled"])return Object.assign(n,Object.fromEntries(Object.keys(l).map(a=>[a,void 0])));for(let a in l)Object.assign(n,{[a](t,...c){let o=l[a];for(let s of o){if(t instanceof Event&&t.defaultPrevented)return;s(t,...c)}}});return n}function pe(e,n=[]){let l=Object.assign({},e);for(let a of n)a in l&&delete l[a];return l}function de(e){return e==null?!1:typeof e.type=="string"||typeof e.type=="object"||typeof e.type=="function"}let G=Symbol("Context");var S=(e=>(e[e.Open=1]="Open",e[e.Closed=2]="Closed",e[e.Closing=4]="Closing",e[e.Opening=8]="Opening",e))(S||{});function ge(){return j(G,null)}function fe(e){I(G,e)}var b=(e=>(e.Space=" ",e.Enter="Enter",e.Escape="Escape",e.Backspace="Backspace",e.Delete="Delete",e.ArrowLeft="ArrowLeft",e.ArrowUp="ArrowUp",e.ArrowRight="ArrowRight",e.ArrowDown="ArrowDown",e.Home="Home",e.End="End",e.PageUp="PageUp",e.PageDown="PageDown",e.Tab="Tab",e))(b||{}),me=(e=>(e[e.Open=0]="Open",e[e.Closed=1]="Closed",e))(me||{});let Q=Symbol("DisclosureContext");function N(e){let n=j(Q,null);if(n===null){let l=new Error(`<${e} /> is missing a parent <Disclosure /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(l,N),l}return n}let Y=Symbol("DisclosurePanelContext");function ve(){return j(Y,null)}let ye=B({name:"Disclosure",props:{as:{type:[Object,String],default:"template"},defaultOpen:{type:[Boolean],default:!1}},setup(e,{slots:n,attrs:l}){let a=y(e.defaultOpen?0:1),t=y(null),c=y(null),o={buttonId:y(`headlessui-disclosure-button-${R()}`),panelId:y(`headlessui-disclosure-panel-${R()}`),disclosureState:a,panel:t,button:c,toggleDisclosure(){a.value=C(a.value,{0:1,1:0})},closeDisclosure(){a.value!==1&&(a.value=1)},close(s){o.closeDisclosure();let i=s?s instanceof HTMLElement?s:s.value instanceof HTMLElement?m(s):m(o.button):m(o.button);i?.focus()}};return I(Q,o),fe(O(()=>C(a.value,{0:S.Open,1:S.Closed}))),()=>{let{defaultOpen:s,...i}=e,u={open:a.value===0,close:o.close};return _({theirProps:i,ourProps:{},slot:u,slots:n,attrs:l,name:"Disclosure"})}}}),be=B({name:"DisclosureButton",props:{as:{type:[Object,String],default:"button"},disabled:{type:[Boolean],default:!1},id:{type:String,default:null}},setup(e,{attrs:n,slots:l,expose:a}){let t=N("DisclosureButton"),c=ve(),o=O(()=>c===null?!1:c.value===t.panelId.value);U(()=>{o.value||e.id!==null&&(t.buttonId.value=e.id)}),W(()=>{o.value||(t.buttonId.value=null)});let s=y(null);a({el:s,$el:s}),o.value||K(()=>{t.button.value=s.value});let i=ie(O(()=>({as:e.as,type:n.type})),s);function u(){var r;e.disabled||(o.value?(t.toggleDisclosure(),(r=m(t.button))==null||r.focus()):t.toggleDisclosure())}function v(r){var g;if(!e.disabled)if(o.value)switch(r.key){case b.Space:case b.Enter:r.preventDefault(),r.stopPropagation(),t.toggleDisclosure(),(g=m(t.button))==null||g.focus();break}else switch(r.key){case b.Space:case b.Enter:r.preventDefault(),r.stopPropagation(),t.toggleDisclosure();break}}function d(r){switch(r.key){case b.Space:r.preventDefault();break}}return()=>{var r;let g={open:t.disclosureState.value===0},{id:f,...p}=e,h=o.value?{ref:s,type:i.value,onClick:u,onKeydown:v}:{id:(r=t.buttonId.value)!=null?r:f,ref:s,type:i.value,"aria-expanded":t.disclosureState.value===0,"aria-controls":t.disclosureState.value===0||m(t.panel)?t.panelId.value:void 0,disabled:e.disabled?!0:void 0,onClick:u,onKeydown:v,onKeyup:d};return _({ourProps:h,theirProps:p,slot:g,attrs:n,slots:l,name:"DisclosureButton"})}}}),he=B({name:"DisclosurePanel",props:{as:{type:[Object,String],default:"div"},static:{type:Boolean,default:!1},unmount:{type:Boolean,default:!0},id:{type:String,default:null}},setup(e,{attrs:n,slots:l,expose:a}){let t=N("DisclosurePanel");U(()=>{e.id!==null&&(t.panelId.value=e.id)}),W(()=>{t.panelId.value=null}),a({el:t.panel,$el:t.panel}),I(Y,t.panelId);let c=ge(),o=O(()=>c!==null?(c.value&S.Open)===S.Open:t.disclosureState.value===0);return()=>{var s;let i={open:t.disclosureState.value===0,close:t.close},{id:u,...v}=e,d={id:(s=t.panelId.value)!=null?s:u,ref:t.panel};return _({ourProps:d,theirProps:v,slot:i,attrs:n,slots:l,features:x.RenderStrategy|x.Static,visible:o.value,name:"DisclosurePanel"})}}});const A={__name:"UluAccordion",props:{toggleText:String,toggleElement:{type:String,default:"strong"},toggleClasses:[String,Object,Array],activeClass:{type:String,default:"is-active"}},setup(e){return(n,l)=>{const a=ne("FaIcon");return V(),H($(ye),null,{default:w(({open:t})=>[le("div",{class:L(["accordion",{[e.activeClass]:t}])},[E($(be),{class:L(["accordion__toggle",[{[e.activeClass]:t},e.toggleClasses]])},{default:w(()=>[k(n.$slots,"toggle",{open:t},()=>[(V(),H(ae(e.toggleElement),null,{default:w(()=>[oe(se(e.toggleText),1)]),_:1}))]),k(n.$slots,"toggleIcon",{open:t},()=>[E(a,{class:"accordion__toggle-icon",icon:t?"fas fa-minus":"fas fa-plus",style:{display:"inline"}},null,8,["icon"])])]),_:2},1032,["class"]),E($(he),{class:"accordion__content"},{default:w(()=>[k(n.$slots,"default")]),_:3})],2)]),_:3})}}};A.__docgenInfo={exportName:"default",displayName:"UluAccordion",description:"",tags:{},props:[{name:"toggleText",description:"Test to use for accordion, alternatively use #toggle slot",type:{name:"string"}},{name:"toggleElement",description:"If using toggle text sets the inner element the text is wrapped in, usually a headline or strong",type:{name:"string"},defaultValue:{func:!1,value:'"strong"'}},{name:"toggleClasses",description:"Classes to bind for the toggle button",type:{name:"string|object|array"}},{name:"activeClass",description:"Active class output on container and toggle elements",type:{name:"string"},defaultValue:{func:!1,value:'"is-active"'}}],slots:[{name:"toggle",scoped:!0,bindings:[{name:"open",title:"binding"}]},{name:"toggleIcon",scoped:!0,bindings:[{name:"open",title:"binding"}]},{name:"default"}],sourceFiles:["/Users/joe/Projects/Personal/Github/frontend-vue/lib/components/UluAccordion.vue"]};const we={title:"Components/UluAccordion",component:A,tags:["autodocs"],argTypes:{slotDefault:{control:"text",description:"Content for the default slot"}},args:{slotDefault:"This is the content to be revealed"},render:e=>({components:{UluAccordion:A},setup(){return{args:e}},template:`
      <UluAccordion v-bind="args">
        <template #toggle v-if="args.slotToggle">
          This is <em>the content</em> from toggle slot
        </template>
        <template #default>{{ args.slotDefault }}</template>
      </UluAccordion>
    `})},D={args:{toggleText:"This is the toggle text",activeClass:"test-active"}},T={args:{slotToggle:!0}};D.parameters={...D.parameters,docs:{...D.parameters?.docs,source:{originalSource:`{
  args: {
    toggleText: "This is the toggle text",
    activeClass: "test-active"
  }
}`,...D.parameters?.docs?.source}}};T.parameters={...T.parameters,docs:{...T.parameters?.docs,source:{originalSource:`{
  args: {
    slotToggle: true
  }
}`,...T.parameters?.docs?.source}}};const De=["PassingToggleText","UsingToggleSlot"];export{D as PassingToggleText,T as UsingToggleSlot,De as __namedExportsOrder,we as default};
